services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
      - "1080:1080"
    volumes:
      - ${WORKSPACES}:/var/www/html/:rw,cached
      - ./conf/nginx/conf.d:/etc/nginx/conf.d/:ro,cached
      - ./conf/nginx/nginx.conf:/etc/nginx/nginx.conf:ro,cached
      - ./log/nginx/:/var/log/nginx/:rw,cached
    links:
      - php72:fpm72
      - php74:fpm74
      - php56:fpm56
      - php80:fpm80
      - php82:fpm82
      - php83:fpm83
    environment:
      - TZ=Asia/Shanghai
    networks:
      docker_net:
        ipv4_address: ${NGINX_IP}

  php72:
    build: ./php/php72/
    expose:
      - "9000"
    volumes:
      - ${WORKSPACES}:/var/www/html/:rw,cached
      - ./conf/php/php72.ini:/usr/local/etc/php/php.ini:ro,cached
      - ./conf/php/php-fpm.d/www72.conf:/usr/local/etc/php-fpm.d/www.conf:rw,cached
      - ./log/php-fpm/:/var/log/php-fpm/:rw,cached
    links:
      - mysql:mysql
      - redis:redis
      - memcached:memcached
      # - elasticsearch:elasticsearch
    networks:
      docker_net:
        ipv4_address: ${PHP72_IP}
  
  php74:
    build: ./php/php74/
    expose:
      - "9000"
    volumes:
      - ${WORKSPACES}:/var/www/html/:rw,cached
      - ./conf/php/php74.ini:/usr/local/etc/php/php.ini:ro,cached
      - ./conf/php/php-fpm.d/www74.conf:/usr/local/etc/php-fpm.d/www.conf:rw,cached
      - ./log/php-fpm/:/var/log/php-fpm/:rw,cached
    links:
      - mysql:mysql
      - redis:redis
      - memcached:memcached
      # - elasticsearch:elasticsearch

    networks:
      docker_net:
        ipv4_address: ${PHP74_IP}      

  php56:
    build: ./php/php56/
    expose:
      - "9000"
    volumes:
      - ${WORKSPACES}:/var/www/html/:rw,cached
      - ./conf/php/php56.ini:/usr/local/etc/php/php.ini:ro,cached
      - ./conf/php/php-fpm.d/www56.conf:/usr/local/etc/php-fpm.d/www.conf:rw,cached
      - ./log/php-fpm/:/var/log/php-fpm/:rw,cached
    links:
      - mysql:mysql
      - redis:redis
    networks:
      docker_net:
        ipv4_address: ${PHP56_IP}
  php80:
    build: ./php/php80/
    expose:
      - "9000"
      - "9999"
    volumes:
      - ${WORKSPACES}:/var/www/html/:rw,cached
      - ./conf/php/php80.ini:/usr/local/etc/php/php.ini:ro,cached
      - ./conf/php/php-fpm.d/www80.conf:/usr/local/etc/php-fpm.d/www.conf:rw,cached
      - ./log/php-fpm/:/var/log/php-fpm/:rw,cached
      # - elasticsearch:elasticsearch
    links:
      - mysql:mysql
      - redis:redis
      - memcached:memcached
      # - elasticsearch:elasticsearch
    networks:
      docker_net:
        ipv4_address: ${PHP80_IP}   

  php82:
    build: ./php/php82/
    expose:
      - "9000"
      - "9999"
    volumes:
      - ${WORKSPACES}:/var/www/html/:rw,cached
      - ./conf/php/php82.ini:/usr/local/etc/php/php.ini:ro,cached
      - ./conf/php/php-fpm.d/www82.conf:/usr/local/etc/php-fpm.d/www.conf:rw,cached
      - ./log/php-fpm/:/var/log/php-fpm/:rw,cached
    links:
      - mysql:mysql
      - redis:redis
      - memcached:memcached
      - elasticsearch:elasticsearch
    tty: true
    networks:
      docker_net:
        ipv4_address: ${PHP82_IP} 
  php83:
    build: 
      context: ./php/php83/
      args:
        PHP_VERSION: 8.3-fpm
    expose:
      - "9000"
      - "9999"
    volumes:
      - ${WORKSPACES}:/var/www/html/:rw,cached
      - ./conf/php/php83.ini:/usr/local/etc/php/php.ini:ro,cached
      - ./conf/php/php-fpm.d/www83.conf:/usr/local/etc/php-fpm.d/www.conf:rw,cached
      - ./log/php-fpm/:/var/log/php-fpm/:rw,cached
    links:
      - mysql:mysql
      - redis:redis
      - memcached:memcached
      - elasticsearch:elasticsearch
    networks:
      docker_net:
        ipv4_address: ${PHP83_IP}
              
  mysql:
    #image: mysql:5.6
    image: mysql:5.7
    # image: mysql:8
    ports:
      - "3306:3306"
    volumes:
      #- ./conf/mysql/my8.cnf:/etc/mysql/my.cnf:ro,cached
      - ./conf/mysql/my7.cnf:/etc/mysql/my.cnf:ro,cached
      #- ./mysql8/:/var/lib/mysql/:rw,cached
      - ./mysql7/:/var/lib/mysql/:rw,cached
      - ./log/mysql7/:/logs:rw,cached
    environment:
      MYSQL_ROOT_PASSWORD: "123456"
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_INITDB_SKIP_TZINFO: "Asia/Shanghai"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "1"
    networks:
      docker_net:
        ipv4_address: ${MYSQL_IP}

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      docker_net:
        ipv4_address: ${REDIS_IP}

  memcached:
    image: memcached:latest
    ports:
      - "11211:11211"
    networks:
      docker_net:
        ipv4_address: ${MEMCACHED_IP}
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
        - ./conf/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
        - ./elasticsearch/data:/usr/share/elasticsearch/data
        - ./elasticsearch/plugins:/usr/share/elasticsearch/plugins
        - ./log/elasticsearch/:/usr/share/elasticsearch/logs
    #user: ${ES_UID}
    # command: ["sh", "-c","groupadd elsearch","useradd elsearch -g elsearch -p elasticsearch","chown -R elsearch:elsearch elasticsearch-7.8.0","su elsearch", "./bin/elasticsearch -d"]    
    environment:
        - node.name=es-node
        - cluster.name=es-cluster
        - discovery.seed_hosts=elasticsearch
        - bootstrap.memory_lock=true
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      # 取消内存相关限制 用于开启内存锁定
      memlock:
        soft: -1
        hard: -1
    user: "1000:1000"
    networks:
        docker_net:
          ipv4_address: ${ES_IP}

  kibana:
    image: kibana:7.8.0
    ports:
      - "5601:5601"     
    volumes:
      - ./conf/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml:rw 
    depends_on:
        - elasticsearch   
    networks:
      docker_net:
        ipv4_address: ${KA_IP}

  # portainer:
  #   image: portainer/portainer:latest
  #   ports:
  #     - "9091:9000"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:cached
  #     - ./portainer/:/data:cached
  #   networks:
  #     docker_net:
  #       ipv4_address: ${PORTAINER_IP}

networks:
  docker_net:
    driver: bridge
    ipam:
      driver: default
      config:
        -
          subnet: "${DOCKER_SUBNET}"